===============================================================
 Column: Clojure の Web アプリケーションフレームワークについて
===============================================================

Clojure の Web アプリケーションフレームワーク
=============================================

このドキュメントを読んでいるあなたはきっと Clojure に Web アプリケーションフレームワークがあるのか気になって読んでいるんだと思います。近年流行る言語は必ずと言っていいほど優れたすべてを包括するような Web アプリケーションフレームワークが存在します。Ruby なら Ruby on Rails 、 Python なら Django 、新しいところで Elixir の Phoenix ですね。ならば Clojure にも何かメジャーな Web アプリケーションフレームワークがあるんじゃないのだろうか?そう考えるのは当然かもしれません。結論から言えば Clojure にはあなたの望むような Web アプリケーションフレームワークは存在しないでしょう。 Luminus は?そう思ったかもしれません。私はあれをフレームワークと言ってしまうのは少々乱暴だと思っています。確かに ``lein new luminus myapp +cljs`` などとすれば、ある程度ボイラーテンプレートな部分を構築済みのアプリケーションのひな形が出てきますが、それだけです。基本的にあなたが覚える必要がある(あるいは覚えることになる)のは Luminus の使い方ではなく、各種 Luminus が最初から依存性に含めている小さなライブラリ群になります。ルーティングには Compojure を使っていて、テンプレートエンジンには Selmer を使っている、データベースアクセスには Yesql を使っているなど、そういう小さなライブラリの組み合わせから成り立っています。

Rails のように Ruby 自身を拡張して、 Rails だけにあるメソッドがあったりするというわけではなく、 Clojure 自身の関数とライブラリから提供される関数を組み合わせて

Clojure のメーリングリストを読んでいると Clojure コミュニティ内でも Web アプリケーションフレームワークがあったほうがいいんじゃないかと議論になることがあります。しかし、 Clojure コミュニティでは大きなひとつのフレームワークよりも、組み合わせ可能な小さいライブラリを使うほうがいいとされているため、





しかし、私は初心者に限って言えばこのドキュメントの最初の方から解説しているように、 Ring を最初にしっかりと学び Clojure で Web アプリケーションを作るお作法を学ぶべきだと思っています。この理由について詳しく説明していきたいと思います。

Clojure の Web アプリケーションフレームワークというときに幾つかの名前がすぐに出てきます。 Compojure, Luminus, Pedestal, Hoplon… 現在有名なところでこんなものでしょう。
